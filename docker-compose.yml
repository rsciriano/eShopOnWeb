services:
  eshopwebmvc:
    image: ${DOCKER_REGISTRY-}eshopwebmvc
    build:
      context: .
      dockerfile: src/Web/Dockerfile    
    depends_on:
      sqlserver:
        condition: service_healthy
        restart: true   
      cosmosdb:
        condition: service_healthy
        restart: true   
    networks:
      - mynet
  #eshoppublicapi:
  #  image: ${DOCKER_REGISTRY-}eshoppublicapi
  #  build:
  #    context: .
  #    dockerfile: src/PublicApi/Dockerfile
  #  depends_on:
  #    #- "sqlserver"
  #    cosmosdb:
  #      condition: service_healthy
  #      restart: true   
  #  networks:
  #    - mynet
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-CU18-ubuntu-20.04
    hostname: sqlserver
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=@someThingComplicated1234
      - ACCEPT_EULA=Y
    networks:
      - mynet
    healthcheck:
          test: /opt/mssql-tools/bin/sqlcmd -U sa -P "$${SA_PASSWORD}" -C -Q "SELECT 1" -b
          interval: 2s
          timeout: 120s
          retries: 60
  cosmosdb:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
    ports:
      - "8081:8081"
      - "10250-10255:10250-10255"
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=20
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
    networks:
      - mynet
    healthcheck:
          test: ["CMD", "curl", "-f", "--insecure", "https://localhost:8081/_explorer/index.html"]
          interval: 2s
          timeout: 120s
          retries: 60
networks:
  mynet:
    driver: bridge  

